security:
    # Hachage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User: 'auto'

    # Configuration des fournisseurs d'utilisateurs
    providers:
        app_user_provider: # Nom du fournisseur
            entity:
                class: App\Entity\User # Classe de l'entité User
                property: email # Champ utilisé pour l'authentification (email)

    # Configuration des pare-feux
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider # Utilisation du fournisseur app_user_provider
            form_login:
                login_path: app_login # Route pour le formulaire de login
                check_path: app_login # Route où Symfony valide les identifiants
                username_parameter: _email # Nom du champ pour l'email
                password_parameter: _password # Nom du champ pour le mot de passe
                default_target_path: app_home # Redirection après connexion réussie
            logout:
                path: app_logout # Route pour la déconnexion
                target: app_login # Redirection après déconnexion

    # Contrôle des accès aux routes
    access_control:
        - { path: ^/utilisateur, roles: ROLE_ADMIN }
     
        # Empêche l'accès à /profile si l'utilisateur n'a pas le rôle ROLE_USER ou est banni
        - { path: ^/profile, roles: ROLE_USER, allow_if: "not user.getBanned()" }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon